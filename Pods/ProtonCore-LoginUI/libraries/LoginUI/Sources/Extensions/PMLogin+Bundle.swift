//
//  PMLogin+Bundle.swift
//  ProtonCore-Login - Created on 16.11.2020.
//
//  Copyright (c) 2022 Proton Technologies AG
//
//  This file is part of Proton Technologies AG and ProtonCore.
//
//  ProtonCore is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  ProtonCore is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with ProtonCore.  If not, see <https://www.gnu.org/licenses/>.

#if os(iOS)

import Foundation
#if SPM
import ProtonCoreLoginUIResourcesiOS
#endif

extension LoginAndSignup {
    #if SPM
    static let bundle: Bundle = spmResourcesBundle
    #else
    static let bundle: Bundle = module ?? podsBundle ?? Bundle(for: LoginAndSignup.self)
    #endif

    // Generated by SPM 5.3 on Xcode 12
    static var module: Bundle? = {
        let bundleName = "Resources-LoginUI"

        let candidates = [
            // Bundle should be present here when the package is linked into an App.
            Bundle.main.resourceURL,

            // Bundle should be present here when the package is linked into a framework.
            Bundle(for: LoginAndSignup.self).resourceURL,

            // For command-line tools.
            Bundle.main.bundleURL
        ]

        for candidate in candidates {
            let bundlePath = candidate?.appendingPathComponent(bundleName + ".bundle")
            if let bundle = bundlePath.flatMap(Bundle.init(url:)) {
                return bundle
            }
        }

        return nil
    }()

    private static var podsBundle: Bundle? {
        guard let url = Bundle(for: LoginAndSignup.self).url(forResource: String(describing: LoginAndSignup.self), withExtension: "bundle"),
              let bundle = Bundle(url: url) else {
            return nil
        }
        return bundle
    }
}

#endif
